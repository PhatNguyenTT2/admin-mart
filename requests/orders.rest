### Variables
@baseUrl = http://localhost:3001/api

### ============================================
### AUTHENTICATION (Run this first to get token)
### ============================================

### Login to get token
# @name loginResponse
POST {{baseUrl}}/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

### Extract token from login response
@token = {{loginResponse.response.body.data.token}}

### Set these after creating products and orders
@productId = YOUR_PRODUCT_ID_HERE
@orderId = YOUR_ORDER_ID_HERE

### ============================================
### ORDERS
### ============================================

### 1. Get All Orders (Admin Only)
GET {{baseUrl}}/orders
Authorization: Bearer {{token}}

### 2. Get Orders with Pagination
GET {{baseUrl}}/orders?page=1&per_page=10
Authorization: Bearer {{token}}

### 3. Filter Orders by Status
GET {{baseUrl}}/orders?status=pending
Authorization: Bearer {{token}}

### 4. Filter Orders by Payment Status
GET {{baseUrl}}/orders?payment_status=paid
Authorization: Bearer {{token}}

### 5. Sort Orders by Total (High to Low)
GET {{baseUrl}}/orders?sort_by=total_high
Authorization: Bearer {{token}}

### 6. Sort Orders by Newest
GET {{baseUrl}}/orders?sort_by=newest
Authorization: Bearer {{token}}

### 7. Get My Orders (Authenticated User)
GET {{baseUrl}}/orders/user/my-orders
Authorization: Bearer {{token}}

### 8. Get Order by ID
GET {{baseUrl}}/orders/{{orderId}}
Authorization: Bearer {{token}}

### 9. Create Order - Single Item
# @name createOrder
POST {{baseUrl}}/orders
Content-Type: application/json

{
  "customer": {
    "name": "John Doe",
    "email": "john.doe@example.com",
    "phone": "+1234567890"
  },
  "shippingAddress": {
    "street": "123 Main Street",
    "city": "New York",
    "state": "NY",
    "zipCode": "10001",
    "country": "USA"
  },
  "items": [
    {
      "productId": "{{productId}}",
      "quantity": 2
    }
  ],
  "paymentMethod": "card",
  "customerNote": "Please deliver after 5 PM"
}

### 10. Create Order - Multiple Items
POST {{baseUrl}}/orders
Content-Type: application/json

{
  "customer": {
    "name": "Jane Smith",
    "email": "jane.smith@example.com",
    "phone": "+0987654321"
  },
  "shippingAddress": {
    "street": "456 Oak Avenue",
    "city": "Los Angeles",
    "state": "CA",
    "zipCode": "90001",
    "country": "USA"
  },
  "items": [
    {
      "productId": "{{productId}}",
      "quantity": 1
    },
    {
      "productId": "ANOTHER_PRODUCT_ID",
      "quantity": 3
    }
  ],
  "paymentMethod": "cash",
  "customerNote": "Gift wrapping required"
}

### 11. Create Order - Guest Checkout
POST {{baseUrl}}/orders
Content-Type: application/json

{
  "customer": {
    "name": "Guest User",
    "email": "guest@example.com",
    "phone": "+1112223333"
  },
  "shippingAddress": {
    "street": "789 Pine Road",
    "city": "Chicago",
    "state": "IL",
    "zipCode": "60601",
    "country": "USA"
  },
  "items": [
    {
      "productId": "{{productId}}",
      "quantity": 5
    }
  ],
  "paymentMethod": "bank_transfer"
}

### 12. Update Order Status - Processing (Admin Only)
PATCH {{baseUrl}}/orders/{{orderId}}/status
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "processing"
}

### 13. Update Order Status - Shipping
PATCH {{baseUrl}}/orders/{{orderId}}/status
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "shipping"
}

### 14. Update Order Status - Delivered
PATCH {{baseUrl}}/orders/{{orderId}}/status
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "delivered"
}

### 15. Update Order Status - Cancelled
PATCH {{baseUrl}}/orders/{{orderId}}/status
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "cancelled"
}

### 16. Update Payment Status - Paid (Admin Only)
PATCH {{baseUrl}}/orders/{{orderId}}/payment
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "paymentStatus": "paid"
}

### 17. Update Payment Status - Failed
PATCH {{baseUrl}}/orders/{{orderId}}/payment
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "paymentStatus": "failed"
}

### 18. Update Tracking Number (Admin Only)
PUT {{baseUrl}}/orders/{{orderId}}/tracking
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "trackingNumber": "TRACK123456789"
}

### 19. Get Order Statistics (Admin Only)
GET {{baseUrl}}/orders/stats/dashboard
Authorization: Bearer {{token}}

### 20. Create Order - Missing Customer Info (400 Test)
POST {{baseUrl}}/orders
Content-Type: application/json

{
  "items": [
    {
      "productId": "{{productId}}",
      "quantity": 1
    }
  ]
}

### 21. Create Order - Empty Items (400 Test)
POST {{baseUrl}}/orders
Content-Type: application/json

{
  "customer": {
    "name": "Test User",
    "email": "test@example.com",
    "phone": "+1234567890"
  },
  "items": []
}

### 22. Create Order - Invalid Product (400 Test)
POST {{baseUrl}}/orders
Content-Type: application/json

{
  "customer": {
    "name": "Test User",
    "email": "test@example.com",
    "phone": "+1234567890"
  },
  "items": [
    {
      "productId": "507f1f77bcf86cd799439011",
      "quantity": 1
    }
  ]
}
