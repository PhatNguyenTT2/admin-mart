### Variables
@baseUrl = http://localhost:3001/api
# @baseUrl = https://admin-mart.onrender.com/api

### ============================================
### AUTHENTICATION (Run this first!)
### ============================================

### Login to get token
# @name loginResponse
POST {{baseUrl}}/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

### Extract token
@token = {{loginResponse.response.body.data.token}}

### ============================================
### CREATE CATEGORIES (Run these in order!)
### ============================================

### 1. Create Category: Baking Material
# @name bakingMaterial
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Baking material",
  "description": "Essential ingredients for all your baking needs",
  "image": "https://www.figma.com/api/mcp/asset/category-baking.jpg",
  "order": 1
}
### Extract category IDs
@bakingMaterialId = {{bakingMaterial.response.body.data.category.id}}

### 2. Create Category: Meats
# @name meats
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Meats",
  "description": "Fresh and frozen meat products",
  "image": "https://www.figma.com/api/mcp/asset/category-meats.jpg",
  "order": 2
}
### Extract category IDs
@meatsId = {{meats.response.body.data.category.id}}

### 3. Create Category: Milks & Dairies
# @name milksDairies
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Milks & Dairies",
  "description": "Fresh milk, yogurt, cheese and dairy products",
  "image": "https://www.figma.com/api/mcp/asset/category-dairy.jpg",
  "order": 3
}

### Extract category IDs
@milksDairiesId = {{milksDairies.response.body.data.category.id}}

### 4. Create Category: Vegetables
# @name vegetables
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Vegetables",
  "description": "Fresh organic and conventional vegetables",
  "image": "https://www.figma.com/api/mcp/asset/category-vegetables.jpg",
  "order": 4
}

### Extract category IDs
@vegetablesId = {{vegetables.response.body.data.category.id}}

### 5. Create Category: Fresh Fruits
# @name freshFruits
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Fresh Fruits",
  "description": "Seasonal fresh fruits, organic and conventional",
  "image": "https://www.figma.com/api/mcp/asset/category-fruits.jpg",
  "order": 5
}

### Extract category IDs
@freshFruitsId = {{freshFruits.response.body.data.category.id}}

### 6. Create Category: Beverages
# @name beverages
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Beverages",
  "description": "Soft drinks, juices, and refreshing beverages",
  "image": "https://www.figma.com/api/mcp/asset/category-beverages.jpg",
  "order": 6
}

### 7. Create Nested Category: Organic Vegetables (child of Vegetables)
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Organic Vegetables",
  "description": "100% certified organic vegetables",
  "parent": "{{vegetablesId}}",
  "order": 1
}

### 8. Create Nested Category: Frozen Meats (child of Meats)
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Frozen Meats",
  "description": "Frozen meat products for longer storage",
  "parent": "{{meatsId}}",
  "order": 1
}

### ============================================
### READ CATEGORIES
### ============================================

### Get all categories
GET {{baseUrl}}/categories

### Get all categories (with auth)
GET {{baseUrl}}/categories
Authorization: Bearer {{token}}

### Get category by ID
GET {{baseUrl}}/categories/{{bakingMaterialId}}

### Get category by ID (with auth)
GET {{baseUrl}}/categories/{{bakingMaterialId}}
Authorization: Bearer {{token}}

### ============================================
### UPDATE CATEGORIES
### ============================================

### Update category name and description
PUT {{baseUrl}}/categories/{{bakingMaterialId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Baking Materials & Ingredients",
  "description": "Complete range of baking ingredients and materials"
}

### Update category image
PUT {{baseUrl}}/categories/{{meatsId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "image": "https://www.figma.com/api/mcp/asset/category-meats-updated.jpg"
}

### Update category order
PUT {{baseUrl}}/categories/{{vegetablesId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "order": 10
}

### Deactivate category
PUT {{baseUrl}}/categories/{{freshFruitsId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "isActive": false
}

### Reactivate category
PUT {{baseUrl}}/categories/{{freshFruitsId}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "isActive": true
}

### ============================================
### DELETE CATEGORIES
### ============================================

### Delete category (Admin only)
# DELETE {{baseUrl}}/categories/{{categoryIdToDelete}}
# Authorization: Bearer {{token}}

### ============================================
### VERIFICATION & TESTING
### ============================================

### Verify all categories created
GET {{baseUrl}}/categories

### Count categories
# Should return 8 categories (5 main + 3 additional)
GET {{baseUrl}}/categories

### Test - Create category without auth (should fail 401)
POST {{baseUrl}}/categories
Content-Type: application/json

{
  "name": "Unauthorized Category"
}

### Test - Create category with duplicate name (should fail 400)
POST {{baseUrl}}/categories
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Baking material"
}

### Test - Get non-existent category (should fail 404)
GET {{baseUrl}}/categories/000000000000000000000000

### ============================================
### NOTES
### ============================================

# After running this file:
# 1. Copy the category IDs to create_all_products.rest
# 2. Update the @bakingMaterialId, @meatsId, etc. variables in products file
# 3. Run create_all_products.rest to create products with these categories
#
# Category Structure:
# - Baking material (5 products)
# - Meats (4 products)
#   - Frozen Meats (subset)
# - Milks & Dairies (3 products)
# - Vegetables (2 products)
#   - Organic Vegetables (subset)
# - Fresh Fruits (3 products)
# - Beverages (1 product)
